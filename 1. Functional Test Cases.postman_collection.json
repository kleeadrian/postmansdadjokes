{
	"info": {
		"_postman_id": "ab4f2919-2e64-4785-8494-adca7e6f00e3",
		"name": "1. Functional Test Cases",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "42994632"
	},
	"item": [
		{
			"name": "TEST001 - Product Creation Workflow",
			"item": [
				{
					"name": "Gets all dadjokes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json(); ",
									"let arrayCount = response.length",
									"pm.variables.set(\"arrayCount\", response.length);",
									"console.log(response.length)",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/dadjoke"
					},
					"response": [
						{
							"name": "A list of current products",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": "{{baseUrl}}/dadjoke"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"<int>\",\n        \"joke\": \"<string>\",\n        \"groaness\": \"<int>\"\n    },\n    {\n        \"id\": \"<int>\",\n        \"joke\": \"<string>\",\n        \"groaness\": \"<int>\"\n    }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": "{{baseUrl}}/dadjoke"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": "{{baseUrl}}/dadjoke"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Creates a new dadjoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"Object.keys(response).forEach(variable => {",
									"    console.log(variable);",
									"    pm.variables.set(variable, response[variable]);",
									"    console.log(response[variable])",
									"    pm.expect(pm.variables.get(variable)).to.equal(response[variable])",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"joke\": \"Where are all my jokes stored? In a dad-a-base\",\n  \"groaness\": 5\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/dadjoke"
					},
					"response": [
						{
							"name": "Product was created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/dadjoke"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Location",
									"value": "<string>",
									"description": {
										"content": "The URL of the new product that was just created.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"<int>\",\n        \"joke\": \"<string>\",\n        \"groaness\": \"<int>\"\n    }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/products"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/dadjoke"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get new dadjoke that was created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"Object.keys(response).forEach(test => {",
									"    pm.test(`${test} is equal`, () => {",
									"        pm.expect(response[test]).to.equal(pm.variables.get(test))",
									"    })",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dadjoke/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dadjoke",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Product retrieved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"<int>\",\n        \"joke\": \"<string>\",\n        \"groaness\": \"<int>\"\n    }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dadjoke/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dadjoke",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "TEST002 - Product Update Workflow",
			"item": [
				{
					"name": "Get's all dadjokes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/dadjoke"
					},
					"response": [
						{
							"name": "A list of current products",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": "{{baseUrl}}/dadjoke"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"<int>\",\n        \"joke\": \"<string>\",\n        \"groaness\": \"<int>\"\n    },\n    {\n        \"id\": \"<int>\",\n        \"joke\": \"<string>\",\n        \"groaness\": \"<int>\"\n    }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": "{{baseUrl}}/dadjoke"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": "{{baseUrl}}/dadjoke"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get new dadjoke that was created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dadjoke/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dadjoke",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Product retrieved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update dadjoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"Object.keys(response).forEach(variable => {",
									"    pm.variables.set(variable, response[variable]);",
									"    pm.expect(pm.variables.get(variable)).to.equal(response[variable])",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"joke\": \"What do you call a pile of cats? A meowtain\",\n  \"groaness\": 5\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dadjoke/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dadjoke",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Product was created successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Location",
									"value": "<string>",
									"description": {
										"content": "The URL of the new product that was just updated.",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get updated dadjoke",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"Object.keys(response).forEach(test => {",
									"    pm.test(`${test} is equal`, () => {",
									"        pm.expect(response[test]).to.equal(pm.variables.get(test))",
									"    })",
									"})",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dadjoke/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dadjoke",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Product retrieved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dadjoke/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dadjoke",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dadjoke/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dadjoke",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dadjoke/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dadjoke",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{id}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "TEST003 - Product Delete Workflow",
			"item": [
				{
					"name": "Returns a list of products from the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.variables.set(\"id\", pm.response.json()[0].id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/dadjoke"
					},
					"response": [
						{
							"name": "A list of current products",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": "{{baseUrl}}/api/products"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"model\": \"<string>\",\n    \"sku\": \"<string>\",\n    \"cost\": \"<float>\",\n    \"imageUrl\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"model\": \"<string>\",\n    \"sku\": \"<string>\",\n    \"cost\": \"<float>\",\n    \"imageUrl\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": "{{baseUrl}}/api/products"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": "{{baseUrl}}/api/products"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get a product from the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dadjoke/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dadjoke",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Product retrieved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete a product from the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dadjoke/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dadjoke",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Product deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get deleted product from the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "x-mock-response-code",
								"value": "404",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dadjoke/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dadjoke",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Product retrieved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"model\": \"<string>\",\n  \"sku\": \"<string>\",\n  \"cost\": \"<float>\",\n  \"imageUrl\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "apikey",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 2000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}